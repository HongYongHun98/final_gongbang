<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="board">

<insert id="add" parameterType="com.spring.gotgongbang.board.model.InquiryVO">
 	<if test='fk_seq.equals("")'>
 	    insert into INQUIRY(inquiry_num_pk, user_id_fk, inquiry_title, inquiry_content, groupno, fk_seq, depthno, inquiry_date, inquiry_viewcount)
		values(seq_inquiry_num_pk.nextval, #{user_id_fk}, #{inquiry_title}, #{inquiry_content}, #{groupno}, default, default, default, default)
	</if>
	
	<if test='!fk_seq.equals("")'>
		insert into INQUIRY(inquiry_num_pk, user_id_fk, inquiry_title, inquiry_content, groupno, fk_seq, depthno, inquiry_date, inquiry_viewcount)
		values(seq_inquiry_num_pk.nextval, #{user_id_fk}, #{inquiry_title}, #{inquiry_content}, #{groupno}, #{fk_seq}, #{depthno}+1, default, default)
	</if>
</insert>


<!-- 파일 첨부 기능이 있는 온라인 문의 -->
	<insert id="add_withFile" parameterType="com.spring.gotgongbang.board.model.InquiryVO">
		<if test='fk_seq.equals("")'>
			insert into INQUIRY(inquiry_num_pk, user_id_fk, inquiry_title, inquiry_content, groupno, fk_seq, depthno, inquiry_date, inquiry_viewcount, inquiry_status, inquiry_fileName, inquiry_orgFilename, inquiry_fileSize)
			values(seq_inquiry_num_pk.nextval, #{user_id_fk}, #{inquiry_title}, #{inquiry_content}, #{groupno}, default, default, default, default, default, #{inquiry_fileName}, #{inquiry_orgFilename}, #{inquiry_fileSize} )
		</if>
		
		<if test='!fk_seq.equals("")'>
			insert into INQUIRY(inquiry_num_pk, user_id_fk, inquiry_title, inquiry_content, groupno, fk_seq, depthno, inquiry_date, inquiry_viewcount, inquiry_status, inquiry_fileName, inquiry_orgFilename, inquiry_fileSize)
			values(seq_inquiry_num_pk.nextval, #{user_id_fk}, #{inquiry_title}, #{inquiry_content}, #{groupno}, #{fk_seq}, #{depthno}+1, default, default, default, #{inquiry_fileName}, #{inquiry_orgFilename}, #{inquiry_fileSize} )
		</if>
	</insert>
	
<!-- 질문게시판 글 목록 가져오기 -->	

	<select id="BoardQuestionList" resultType="com.spring.gotgongbang.board.model.InquiryVO">
		select inquiry_num_pk, user_id_fk, inquiry_title, to_char(inquiry_date, 'yyyy-mm-dd hh24:mm:ss') as inquiry_date
		from INQUIRY 
		where inquiry_status = 1
		order by inquiry_num_pk desc
	</select> 
	
<!-- 총 게시물 건수 구하기 -->	
	 
	 <select id="getTotalCount" parameterType="HashMap" resultType="int"> 
	   select count(*)
	   from INQUIRY
	   where inquiry_status = 1 
	   <if test='searchType != ""'>
	   and lower(${searchType}) like '%'|| lower(#{searchWord}) ||'%'
	   </if>
	 </select>
	 
<!-- 페이징 처리한 글목록 가져오기 -->
	<select id="iqListSearchWithPaging" parameterType="HashMap" resultType="com.spring.gotgongbang.board.model.InquiryVO">
		select inquiry_num_pk, user_id_fk, inquiry_title, inquiry_viewcount, inquiry_date, 
		       groupno, fk_seq, depthno,
		       inquiry_fileName
		from 
		(
         select rownum AS rno, inquiry_num_pk, user_id_fk, inquiry_title, inquiry_viewcount, inquiry_date
               , groupno, fk_seq, depthno
               , inquiry_fileName
		    from 
                ( 
                select inquiry_num_pk, user_id_fk, inquiry_title, inquiry_viewcount,
                      to_char(inquiry_date, 'yyyy-mm-dd hh24:mi:ss') AS inquiry_date, 
                      groupno, fk_seq, depthno,
                      inquiry_fileName 
                from INQUIRY
                where inquiry_status = 1
              <if test='searchType != "" and searchWord != ""'>
		        and lower(${searchType}) like '%'|| lower(#{searchWord}) ||'%'
		      </if>
                start with fk_seq = 0
		        connect by prior inquiry_num_pk = fk_seq 
		        order siblings by groupno desc, inquiry_num_pk asc
            ) V
                
        ) T 
        where rno between #{startRno} and #{endRno}
	</select>	 
	
	<!-- === 게시글 1개 조회하기 === -->
	<select id="getView" parameterType="HashMap" resultType="com.spring.gotgongbang.board.model.InquiryVO">
		select previousseq, previoussubject
			 , inquiry_num_pk, user_id_fk, inquiry_title, inquiry_content, inquiry_viewcount, inquiry_date
			 , groupno, fk_seq, depthno 
			 , inquiry_fileName, inquiry_orgFilename, inquiry_fileSize  
		from
		(
		select lag(inquiry_num_pk,1) over(order by inquiry_num_pk desc) AS previousseq
		     , lag(inquiry_title,1) over(order by inquiry_num_pk desc) AS previoussubject
		     , inquiry_num_pk, user_id_fk, inquiry_title, inquiry_content, inquiry_viewcount
		     , to_char(inquiry_date, 'yyyy-mm-dd hh24:mi:ss') AS inquiry_date 
		     , groupno, fk_seq, depthno 
		     , inquiry_fileName, inquiry_orgFilename, inquiry_fileSize   
		from INQUIRY
		where inquiry_status = 1
		) V
		where V.inquiry_num_pk = #{inquiry_num_pk}
	</select>
	
	<!-- === 조회수 1증가 하기 === -->
	<update id="setAddReadCount" parameterType="String">
		update INQUIRY set inquiry_viewcount = inquiry_viewcount + 1
		where inquiry_num_pk = #{inquiry_num_pk}
	</update>
	
	<!-- 게시글  수정 페이지 완료하기 -->
	<update id="edit" parameterType="com.spring.gotgongbang.board.model.InquiryVO">
	    update INQUIRY set inquiry_title = #{inquiry_title}, inquiry_content = #{inquiry_content}
	    where inquiry_num_pk = #{inquiry_num_pk} 
	</update>
	
	<!-- 게시글 삭제하기 -->
	<delete id="del" parameterType="HashMap">
		delete from INQUIRY
		where inquiry_num_pk = #{inquiry_num_pk}
	</delete>
	
	<!-- FAQ 조회 -->
	<select id="getFaq" resultType="com.spring.gotgongbang.board.model.InquiryVO">
		
		SELECT *
		FROM (
		     SELECT 
		        ROW_NUMBER() OVER (PARTITION BY groupno ORDER BY inquiry_viewcount DESC) AS rank,
		        inquiry_viewcount,
		        inquiry_title,
		        groupno,
		        depthno
		    FROM 
		        INQUIRY
		    WHERE 
		        depthno = 0
		) A
		INNER JOIN (
		
		    SELECT 
		        ROW_NUMBER() OVER (PARTITION BY groupno ORDER BY inquiry_viewcount DESC) AS rank,
		        inquiry_viewcount,
		        inquiry_title,
		        inquiry_content,
		        groupno,
		        depthno
		    FROM 
		        INQUIRY
		    WHERE 
		        depthno = 1
		   
		) B
		ON A.groupno = B.groupno
		ORDER BY A.inquiry_viewcount desc, B.rank
		
	</select>	
	
	<!-- Groupno 최대값 알아오기 -->
	<select id="getGroupno_max" resultType="int">
	    select nvl(max(groupno), 0)
	    from INQUIRY
	</select>
	
	
	
	
	
	<!-- 공지사항 - 게시물 건 수 구하기 --> 
	 <select id="getnoTotalCount" parameterType="HashMap" resultType="int"> 
	   select count(*)
	   from notice
	   where notice_status = 1 
	 </select>
	
	<!-- 공지사항 - 페이징 처리한 게시물  -->
	<select id="noiqListSearchWithPaging" parameterType="HashMap" resultType="com.spring.gotgongbang.board.model.NoticeVO">
		
	  select notice_num_pk, admin_id_fk, notice_title, notice_viewcount, notice_date 
	  from 
	  (
          select rownum AS rno, notice_num_pk, admin_id_fk, notice_title, notice_viewcount, notice_date
                     from 
                         ( 
                          select notice_num_pk, admin_id_fk, notice_title, notice_viewcount,
                                             to_char(notice_date, 'yyyy-mm-dd hh24:mi:ss') AS notice_date 
                                         from notice
                                         where notice_status = 1
                                         order by notice_num_pk desc
                          )V 
          ) X
        where rno between #{startRno} and #{endRno}
   </select>	 
	
	<!-- 공지사항 - 글 쓰기 완료-->
	<insert id="add_notice" parameterType="com.spring.gotgongbang.board.model.NoticeVO">
 	
		insert into notice(notice_num_pk, admin_id_fk, notice_title, notice_content, notice_date, notice_viewcount)
		values(seq_notice_num_pk.nextval, 'admin', #{notice_title}, #{notice_content}, default, 0)
	
	</insert>
	
	<!-- 공지사항 조회수 증가와 함께 게시글 조회 -->
	
	<select id="getnotiView" parameterType="HashMap" resultType="com.spring.gotgongbang.board.model.NoticeVO">
		select previousseq, previoussubject
			 , notice_num_pk, admin_id_fk, notice_title, notice_content, notice_viewcount, notice_date
		from
		(
		select lag(notice_num_pk,1) over(order by notice_num_pk desc) AS previousseq
		     , lag(notice_title,1) over(order by notice_num_pk desc) AS previoussubject
		     , notice_num_pk, admin_id_fk, notice_title, notice_content, notice_viewcount
		     , to_char(notice_date, 'yyyy-mm-dd hh24:mi:ss') AS notice_date 
		from notice
		where notice_status = 1
		) V
		where V.notice_num_pk = #{notice_num_pk}
    </select>
	
	
	<!-- 공지사항  수정 페이지 완료하기 -->
	<update id="notiedit" parameterType="com.spring.gotgongbang.board.model.NoticeVO">
	   update notice set notice_title = #{notice_title}, notice_content = #{notice_content}
	    where notice_num_pk = #{notice_num_pk}
	</update>
</mapper>
