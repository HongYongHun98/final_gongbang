<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="order">


 	<!--==================== 이지현 시작 ====================== -->

	<!-- 품목 셀렉트 리스트 가져오기 -->
	<select id="select_types" resultType="com.spring.gotgongbang.order.model.TypesVO">
		select type_code_pk, type_name
		from TYPES
	</select>
	
	
	<!-- 선택한 품목 종류에 따라 요청사항 리스트 가져오기 -->
	<select id="bring_request_list" parameterType="String" resultType="com.spring.gotgongbang.order.model.TypesVO">
		select detail_type_pk, type_code_fk as type_code_pk, detail_type_name
		from detail_type
		where type_code_fk = #{type_code_pk}
	</select>

	
	
	
	<!-- 견적 요청하기 -->
	<insert id="insert_order" parameterType="HashMap">
		insert into ORDERS(order_num_pk, user_id_fk, order_date, brand_name, request_explain, requests, orderer, order_product_type)
		values( seq_order_num_pk.nextval, #{user_id_fk}, default, #{brand_name}, #{request_explain}, #{requests}, #{orderer}, #{order_product_type} )
	</insert>
	
	<!-- 견적요청번호 가져오기 -->
	<select id="select_order_num_pk" parameterType="HashMap" resultType="int">
		select order_num_pk
		from orders
		where user_id_fk=#{user_id_fk} and brand_name=#{brand_name}
        and requests =#{requests}
        and orderer=#{orderer}
        and order_product_type=#{order_product_type}
	 </select>
	 
	 <!-- 전체 사진 반복문으로 추가하기 -->
	 <insert id="insert_whole_img" parameterType="HashMap">
		insert into WHOLE_IMG(whole_img_num_pk, order_num_fk,whole_img_name )
		values(SEQ_WHOLE_IMG.nextval, #{order_num_pk}, #{whole_img_name})
	</insert>
	
	
	 <!-- 상세 사진 반복문으로 추가하기 -->
	 <insert id="insert_detail_img" parameterType="HashMap">
		insert into DETAIL_IMG(detail_img_num_pk, order_num_fk,detail_img_name )
		values(SEQ_DETAIL_IMG.nextval, #{order_num_pk}, #{detail_img_name})
	</insert>	
	
	
	<!-- 요청사항 리스트 반복문으로 추가하기 -->
	 <insert id="insert_detail_request_list" parameterType="HashMap">
		insert into REQUEST_LIST(request_num_pk, detail_type_fk,order_num_fk )
		values(SEQ_REQUEST_LIST.nextval, #{detail_type_fk}, #{order_num_fk})
	</insert>	
	
	
	<!-- 견적서번호를 가지고 정보 가져오기 -->
	<resultMap type="HashMap" id="get_estimate_info_map">
    	<result column="order_product_type" property="order_product_type"/>
    	<result column="brand_name" property="brand_name"/>
    	<result column="request_explain" property="request_explain"/>
    	<result column="requests" property="requests"/>
 
    	<result column="craft_num_fk" property="craft_num_fk" />
    	<result column="estimate_price" property="estimate_price" />
    	<result column="estimate_period" property="estimate_period" />
    </resultMap>
    
	<select id="get_estimate_info" parameterType="String" resultMap="get_estimate_info_map">
		select order_product_type, brand_name, request_explain, requests, craft_num_fk, estimate_price,estimate_period
		from
		(
		select estimate_num_pk,order_num_fk, craft_num_fk,estimate_price, estimate_period
		from estimate
		where estimate_num_pk = #{estimate_num_pk}
		) E JOIN
		(
		select order_num_pk,order_product_type, brand_name, request_explain, requests
		from orders
		) O 
		on E.order_num_fk = O.order_num_pk
	 </select>
	 
	 
	 <!-- 공방번호를 가지고 공방이름 가져오기 -->
	 <select id="get_craft_name" parameterType="int" resultType="String">
		select craft_name
		from craft
		where craft_num_pk = #{craft_num_fk}
	 </select>
	 
	 <!--==================== 이지현 끝 ====================== -->



</mapper>